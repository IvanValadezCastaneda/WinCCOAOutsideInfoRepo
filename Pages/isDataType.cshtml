@page
@model WinCCOAOutsideInfoRepo.Pages.isDataTypeModel
@{
    ViewData["Title"] = "Data Type Functions";
}

<style>
    body {
        font-family: Arial, sans-serif;
        margin: 20px;
    }

    h1 {
        color: #4a90e2;
        border-bottom: 2px solid #e6e6e6;
        padding-bottom: 10px;
    }

    h3, h4, h5 {
        color: #4a90e2;
    }

    form {
        background-color: #f5f7f9;
        padding: 20px;
        border-radius: 8px;
        margin-top: 20px;
        margin-bottom: 20px;
    }

    label {
        display: block;
        margin-top: 10px;
        color: #4a90e2;
    }

    input[type="text"] {
        padding: 8px 12px;
        border-radius: 4px;
        border: 1px solid #ccc;
        width: 100%;
        box-sizing: border-box;
    }

    input[type="button"] {
        margin-top: 20px;
        background-color: #4a90e2;
        color: white;
        padding: 10px 15px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        input[type="button"]:hover {
            background-color: #357ab7;
        }

    pre {
        background-color: #e6e6e6;
        padding: 10px;
        border-radius: 4px;
    }
</style>

<div class="container">
    <h1>@ViewData["Title"]</h1>

    <h3>Data Type Checking Functions</h3>
    <p>In WinCC OA, you can perform data type checking using various functions to ensure that you are working with the correct data types in your scripts and modules. Here are three important functions for data type checking:</p>

    <ol>
        <li><strong><code>getTypeName(expression)</code></strong></li>
        <p>This function returns the data type of any Control expression as a string. It helps you identify the data type of a variable or expression.</p>

        <li><strong><code>dpElementType(dp)</code></strong></li>
        <p>Use this function to get the data type of a data point element. It returns an integer value representing the data type. Refer to the provided constants for data type values.</p>

        <li><strong><code>getType(expression)</code></strong></li>
        <p>This function queries the data type of any Control expression. It returns an integer constant representing the data type. You can use this function to perform data type checks in your scripts.</p>
    </ol>

    <p>When working with WinCC OA scripts and modules, it's essential to ensure that you are handling the correct data types. Here's a summary of how to use these functions for data type checking:</p>

    <ol>
        <li>Use <code>getTypeName(expression)</code> to identify the data type of any Control expression as a string.</li>
        <li>For checking data point elements, employ <code>dpElementType(dp)</code>. Refer to the provided integer constants for data type values.</li>
        <li>Utilize <code>getType(expression)</code> to query the data type of a Control expression and compare it with the expected data type constants for validation.</li>
    </ol>

    <h3>Efficient Data Type Checking with a Custom Library</h3>
    <p>Streamline your WinCC OA scripting with a custom library...Similar to something like this will ocurr when using the function</p>

    <form method="post">
        <label for="userInput">getTypeName():</label>
        <input type="text" id="userInput" name="UserInput" />
        <input type="submit" value="Check Data Type" />
    </form>

    @if (Model.DataTypeMessage != null)
    {
        <p>@Model.DataTypeMessage</p>
    }
</div>

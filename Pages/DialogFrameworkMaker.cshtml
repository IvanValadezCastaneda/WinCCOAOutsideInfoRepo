@page
@model WinCCOAOutsideInfoRepo.Pages.DialogFrameworkMakerModel
@{
    ViewData["Title"] = "Create Dialog Framework";
}
<style>
    body {
        font-family: Arial, sans-serif;
        margin: 20px;
    }

    h1 {
        color: #4a90e2;
        border-bottom: 2px solid #e6e6e6;
        padding-bottom: 10px;
    }

    h3, h4, h5 {
        color: #4a90e2;
    }

    form {
        background-color: #f5f7f9;
        padding: 20px;
        border-radius: 8px;
        margin-top: 20px;
        margin-bottom: 20px;
    }

    label {
        display: block;
        margin-top: 10px;
        color: #4a90e2;
    }

    input[type="text"] {
        padding: 8px 12px;
        border-radius: 4px;
        border: 1px solid #ccc;
        width: 100%;
        box-sizing: border-box;
    }

    input[type="button"] {
        margin-top: 20px;
        background-color: #4a90e2;
        color: white;
        padding: 10px 15px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        input[type="button"]:hover {
            background-color: #357ab7;
        }

    pre {
        background-color: #e6e6e6;
        padding: 10px;
        border-radius: 4px;
    }
</style>
<div class="container">
    <h1>@ViewData["Title"]</h1>
    <h3>Custom Dialog Framework Generator</h3>
    <p>With the Dialog Framework, you can create various types of dialogues such as warnings, questions, or general information within WinCC OA. Customize your dialog by selecting options and generate a ready-to-use script.</p>

    <form method="post">
        <div>
            <label for="dialogType">Dialog Type:</label>
            <select id="dialogType" name="DialogType">
                <option value="general">General</option>
                <option value="information">Information</option>
                <option value="input">Input</option>
                <option value="multiLanguages">Multi Languages</option>
                <option value="question">Question</option>
                <option value="warning">Warning</option>
            </select>
        </div>
        <div>
            <label for="text">Text:</label>
            <input type="text" id="text" name="Text" />
        </div>
        <div>
            <label for="title">Title:</label>
            <input type="text" id="title" name="Title" />
        </div>
        <div>
            <label for="buttonTextOk">Button Text OK:</label>
            <input type="text" id="buttonTextOk" name="ButtonTextOk" />
        </div>
        <div>
            <label for="buttonTextNOk">Button Text NOK:</label>
            <input type="text" id="buttonTextNOk" name="ButtonTextNOk" />
        </div>
        <div>
            <label for="titleColor">Title Color:</label>
            <input type="text" id="titleColor" name="TitleColor" />
        </div>
        <div>
            <label for="extraTitle">Extra Title (multiLanguages):</label>
            <input type="text" id="extraTitle" name="ExtraTitle" />
        </div>
        <div>
            <label for="units">Units (input):</label>
            <input type="text" id="units" name="Units" />
        </div>
        <div>
            <label for="helpLink">Help Link:</label>
            <input type="text" id="helpLink" name="HelpLink" />
        </div>
        <div>
            <label for="enableAllButtons">Enable All Buttons:</label>
            <select id="enableAllButtons" name="EnableAllButtons">
                <option value="False">False</option>
                <option value="True">True</option>
            </select>
        </div>

        <input type="submit" value="Generate Dialog Script" />
    </form>

    @if (!string.IsNullOrEmpty(Model.GeneratedScript))
    {
        <h2>Generated Dialog Script:</h2>
        <pre>@Model.GeneratedScript</pre>
    }
</div>